---
- name: test kubeconfig path
  stat:
    path: "{{ kubeconfig }}"
  register: kubeconfig_path

- name: replace host ip address in the kubeconfig
  replace:
    path: "{{ kubeconfig }}"
    regexp: "https://127.0.0.1:6443"
    replace: "https://{{ master_ip }}:6443"
  when: kubeconfig_path and copy_kubeconfig

- name: Change k3s.yaml permissions to 644
  file:
    path: "{{ kubeconfig }}"
    mode: "600"

- name: check if helm is installed /usr/local/bin/helm
  stat:
    path: $HOME/.config/helm/repositories.yaml
  register: helm_check

- name: Download get-helm-3
  get_url:
    url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    dest: ~/get-helm-3.sh
    mode: "700"
  when: not helm_check.stat.exists

- name: install helm if not exist
  command: >-
    ~/get-helm-3.sh
  when: not helm_check.stat.exists
  changed_when: true

# MetalLB
- name: Download metallb manifest locally
  get_url:
    url: https://raw.githubusercontent.com/metallb/metallb/{{ metallb_version }}/config/manifests/metallb-native.yaml
    dest: /tmp/metallb.yml
    mode: "0664"
  when: metallb

- name: Apply metallb manifest to cluster
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    state: present
    src: /tmp/metallb.yml
  when: metallb

- name: IP address pool - metallb
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        name: default
        namespace: metallb-system
      spec:
        autoAssign: true
        addresses:
          - "{{ metallb_range }}"
  when: metallb

- name: L2 advertisement - metallb
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: metallb.io/v1beta1
      kind: L2Advertisement
      metadata:
        name: default
        namespace: metallb-system
      spec:
        ipAddressPools:
          - default
  when: metallb

# Cert Manager
- name: Download cert manager manifest locally
  get_url:
    url: https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.yaml
    dest: /tmp/cert-manager.yml
    mode: "0664"

- name: Apply cert manager manifest to cluster
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    state: present
    src: /tmp/cert-manager.yml

# ArgoCD
- name: Create argocd namespace
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    name: argocd
    api_version: v1
    kind: Namespace
    state: present
  when: argocd

- name: Download argocd manifest locally
  get_url:
    url: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
    dest: /tmp/argocd.yml
    mode: "0664"
  when: argocd

- name: Apply argocd manifest to cluster
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    state: present
    src: /tmp/argocd.yml
    namespace: argocd
  when: argocd


- name: Patch argocd with type LoadBalancer
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  kubernetes.core.k8s:
    state: patched
    kind: Service
    namespace: argocd
    name: argocd-server
    definition: |
      spec:
        type: "{{ argocd_service_type }}"
  when: argocd

# external-dns TODO
